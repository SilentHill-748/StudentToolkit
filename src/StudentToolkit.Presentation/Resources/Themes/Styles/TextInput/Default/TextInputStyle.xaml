<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:StudentToolkit.Presentation.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/StudentToolkit.Presentation;component/Resources/Dictionaries/ConvertersDictionary.xaml"/>
        <ResourceDictionary Source="/StudentToolkit.Presentation;component/Resources/Dictionaries/FontFamilyDictionary.xaml"/>
        <ResourceDictionary Source="/StudentToolkit.Presentation;component/Resources/Dictionaries/FontSizeDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type controls:TextInput}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Padding" Value="5 7"/>
        <Setter Property="Foreground" Value="{DynamicResource Brushes.App.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource Brushes.TextInput.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.TextInput.BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextInput}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Placeholder text-->
                        <TextBlock
                            Panel.ZIndex="1"
                            Opacity=".40"
                            IsHitTestVisible="False"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Padding="{TemplateBinding
                                Padding,
                                Converter={StaticResource Converters.AddLeftPadding},
                                ConverterParameter=3}"
                            Visibility="{TemplateBinding
                                IsEmpty,
                                Converter={StaticResource Converters.Bool2Visibility}}"
                            Text="{TemplateBinding Placeholder}"/>

                        <!--Validation text-->
                        <TextBlock
                            Grid.Column="1"
                            Panel.ZIndex="2"
                            Margin="10 0 0 0"
                            Text="!"
                            VerticalAlignment="Center"
                            Visibility="{Binding
                                RelativeSource={RelativeSource AncestorType=controls:TextInput},
                                Path=(Validation.HasError),
                                Converter={StaticResource Converters.Bool2Visibility.HiddenIfFalse}}"
                            FontWeight="Bold"
                            FontSize="{StaticResource FontSize.TextInput.BadValidationChar}"
                            FontFamily="{StaticResource FontFamily.TextInput.ValidationErrorChar}"
                            Foreground="{DynamicResource Brushes.Validation.Failed}"/>

                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                            <ScrollViewer x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource Brushes.Validation.Failed}"/>
                            
                            <Setter
                                Property="ToolTip"
                                Value="{Binding
                                    RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>

                        <Trigger Property="IsFocused" Value="True">
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource Brushes.IsFocused.BorderBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="IBeam"/>
                            
                            <Setter
                                Property="Background"
                                Value="{DynamicResource Brushes.MouseOver.Background}"/>
                            
                            <Setter
                                Property="BorderBrush"
                                Value="{DynamicResource Brushes.MouseOver.BorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>