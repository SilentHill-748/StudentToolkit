<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/StudentToolkit.Presentation;component/Resources/Dictionaries/ConvertersDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ToggleButton
                            x:Name="ToggleButton"
                            Style="{DynamicResource Button.Styles.ComboBoxButton}"
                            Grid.ColumnSpan="2"
                            Focusable="False"
                            ClickMode="Press"
                            IsChecked="{Binding
                                RelativeSource={RelativeSource TemplatedParent},
                                Path=IsDropDownOpen}"/>

                        <TextBlock
                            Grid.Column="2"
                            IsHitTestVisible="False"
                            Text="!"
                            Margin="10 0 0 0"
                            FontWeight="Bold"
                            VerticalAlignment="Center"
                            Visibility="{Binding
                                RelativeSource={RelativeSource Self},
                                Path=(Validation.HasError),
                                Converter={StaticResource Converters.Bool2Visibility.HiddenIfFalse}}"
                            FontSize="{DynamicResource FontSize.TextInput.BadValidationChar}"
                            FontFamily="{DynamicResource FontFamily.TextInput.ValidationErrorChar}"
                            Foreground="{DynamicResource Brushes.Validation.Failed}"/>

                        <Path
                            x:Name="Arrow"
                            Grid.Column="1"
                            IsHitTestVisible="False"
                            Margin="0 0 10 0"
                            Data="M 0 0 L 6 3 L 0 6"
                            Style="{DynamicResource Path.Styles.Default}">

                            <Path.RenderTransform>
                                <RotateTransform
                                    Angle="90"
                                    CenterX="3"
                                    CenterY="3"/>
                            </Path.RenderTransform>
                        </Path>

                        <ContentPresenter 
                            x:Name="ContentSite"
                            Margin="5 7 10 7"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                        <Popup
                            x:Name="Popup"
                            Grid.ColumnSpan="2"
                            Placement="Bottom"
                            PopupAnimation="Slide"
                            IsOpen="{TemplateBinding IsDropDownOpen}">

                            <Grid
                                x:Name="DropDown"
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                MinWidth="{Binding ElementName=ToggleButton, Path=ActualWidth}">

                                <Border
                                    x:Name="DropDownBorder"
                                    Background="{DynamicResource Brushes.ComboBox.Background}">

                                    <ScrollViewer>
                                        <StackPanel IsItemsHost="True"/>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="Background" Value="{DynamicResource Brushes.Button.Disabled.Background}"/>
                        </Trigger>

                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="Arrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90"
                                        CenterX="3"
                                        CenterY="3"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter
                                TargetName="ToggleButton"
                                Property="BorderBrush"
                                Value="{DynamicResource Brushes.Validation.Failed}"/>

                            <Setter
                                Property="ToolTip"
                                Value="{Binding
                                    RelativeSource={RelativeSource Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="ToggleButton"
                                Property="BorderBrush"
                                Value="{DynamicResource Brushes.IsSelected.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>